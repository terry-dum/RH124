id or id user01 - to show the currently logged in user,primary group(gid), groups

ps - to show the current process in current shell
ps -au - with user

su - root/user





1) Give user can use sudo
/etc/sudoers - the file to see the %wheel which is admin
usermod -aG wheel test_user - add user into wheel group (reboot to make it take effect)
gpasswd -d test_user wheel - remove user from wheel group
or
create a file /etc/sudoers.d/user01
add this inside the file "user01	ALL=(ALL)	ALL"

Give the group of user can use sudo
create a file /etc/sudoers.d/group01
add this inside the file "%group01	ALL=(ALL)	ALL"
note on the % means group

2)userdel - remove username from /etc/passwd
userdel -r - remove user from /etc/passwd and remove home directory

3)useradd user01 - to create user
passwd user01 - to change/give a pw to user01

4)usermod -c - to update comment
usermod -g change gid(primary group)
usermod -aG ->add secondary group

5)groupadd [groupname] - create new group
groupmod - modify group info
groupdel - delete group

groupadd -g -> specifies a GID
groupadd -r -> new system group
groupmod -n -> change group name
groupmod -g -> update group GID

newgrp group01 -> temporarily change user's primary group

/etc/group

6)echo "message" >> filename -> append the message to this file

7)Password stored 
/etc/passwd - store info of local users, dictionary attack on encrypted pw
/etc/shadow 

chage -> pw change policy
chage -m 0 -M 90 -W 7 -I 14 sysadmin
-I -> after acc locked, if still inactive within 14days, no longer accessible
-W -> warning 7 days b4 pw expire
chage -d 0 user01 -> force user to change pw on next logon

/sbin/nologin
usermod -s /sbin/nologin user01 -> cannot login, still can use pw to access other things

8)ls -ld -> d is showing result of directory instead of the content

chmod u/g/o/a	+/-/=	r/w/x
chmod go-rw -> remove read write for group and others
chmod -R g+rwx /home/user/myfolder -> recursively set permission for the file in this path
chmod 777 -> r/w/x 4/2/1

chown student app.conf -> change the user owner to student user for app.conf
chown -R student /etc -> recursively change the owner to student for the directory itself, subdirectory, and the files inside

chown :student app.conf -> (: colon) change the group owner to student group for app.conf
chown user05:student05 app.conf -> change the (user owner:group owner) to (user05 user: student05 group) for app.conf

Special permission
chmod u+s->(suid 4) File; file executed as the user that own the file, not the user that run the file. Directory; no effect. If owner does not have execute permission, it will be replaced bt uppercase S in ls
chmod g+s->(sgid 2) File; file executed as the group that own the file. Direcotry; file that created in this directory will set the group owner same as the directory. If group does not have execute permission, it will be replaced by uppercase S in ls
chmod o+t->(sticky 1) File; no effect. Direcoty; Only file owner user, root can remove the files, they cannot remove or save files that owned by other users. even if 777 is set. Identify it by a "t" in ls. If other users do not have excute permission, it will be replaced by uppercase T

chmod 2770 example -> setgid bit and +rw-x
chmod 00770 example -> removing sgid and add rw-x. Note that need to add a preceding 0 when removing special permission

date -d "+180 days" +%F
Determine a date 180 days in the future

chage -l -> see expiry date/pw expiry of a user


/etc/login.def -> can set PASS_MAX_DAYS,MIN,WARN... for all user (wont affect current user, only user create after this will be affected)

/var/log/messages

9)[developer1@host ~]$ ssh hosta
[developer1@hosta ~]
ssh hosta -> login to hosta server using the same username as current local user

[developer1@host ~]$ ssh developer2@hosta
[developer2@hosta ~]$

ssh developer2@hosta ls -> run ls command without accessing developer2 remote interactive shell

'w' command displays a list of users that are currently logged in to the system
w --from

/etc/ssh/ssh_known_hosts
~/.ssh/known_hosts
clients' public key location
-> if the key do not match when ssh, will prompt to ask whether want to continue
-> after first time login, public key will save here ~/.ssh/known_hosts

~/.ssh/config
/etc/ssh/ssh_config 
-> set StrictHostKeyChecking parameter to yes, SSH abort connection if public key do not match

The server will store client public key to /etc/ssh directory
ls /etc/ssh/*key.pub

Passwordless login
1) ssh-keygen -> generate private and public key which is saved in  ~/.ssh/id_rsa and ~/.ssh/id_rsa.pub
or/ ssh-keygen -f path -> specify the files, key save in path and path.pub 
2) ssh-copy-id [-i path.pub] user@remotehost -> copy the public key to remote system
3) ssh -i privatekey_path user@remotehost -> specify the private key to access remote system. Without -i, it will have their default path

ssh-add [path] -> add private key to ssh-agent, user wont be prompted when using ssh/scp to connect with their public key

cat ~/.ssh/config
